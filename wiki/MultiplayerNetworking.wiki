#summary Design of message exchanges for multiplayer

<wiki:toc max_depth="2" />

= Basic properties =

  * TCP based approach
  * Cryptography will be avoided for now.
  * Sessioning (to allow reconnection)
  * Text commands and responses, UTF-8
  * Strings enclosed by ""
    * Escape sequences: \" \\ \n \r
  * Complex objects enclosed by { }
  * Messages may span multiple lines
  * Message terminated by a final '}' and chr(13), chr(10)
  * Message exchanges will be pull-based for now, i.e., the server will never send data without a prior request from clients.

== Message format ==

Remark: whitespaces may be used freely where it does not cause ambiguity

{{{
message :: MESSAGE_TYPE_NAME '{' [attributes] '}'
}}}

{{{
attributes :: attribute [, attribute [,...]]
}}}

{{{
attribute :: attribute_name=value
}}}

{{{
value :: "string" | 1234 | 1234.567 | false | true | array | null | object
}}}

{{{
array :: '[' [value [, value [,...]]] ']'
}}}

{{{
object :: [OBJECT_TYPE] '{' [attributes] '}'
}}}

= Request and response formats =

== General errors ==

=== response ===

{{{
ERROR { code=1234, message="" }
}}}

Codes
|| *Code* || *Meaning* ||
|| 1 || Request format error ||
|| 2 || Unknown message type ||
|| 3 || Invalid user or passphrase ||
|| 4 || Client version error ||
|| 5 || Message type not allowed in the current state ||
|| 6 || Unable to relogin, match might have ended ||
|| 7 || Match settings rejected; requested settings not allowed ||

TBD

== Keepalive or latency measurement ==

When: any time

=== Request ===
{{{
PING { }
}}}

=== Response ===
{{{
PONG { }
}}}


== Login ==

When: after establishing a TCP connection.

=== Request ===
{{{
LOGIN { user="", passphrase="", language="", version="" }
}}}

Remarks:
  * {{{passphrase}}} is plaintext
  * {{{language}}} the client's requested language

=== Responses ===

{{{
WELCOME { session="", language="" }
}}}

Remarks:
  * {{{session}}} contains a string that can be used to re-login in case of lost connection. Values will be unique among clients and started gameplays.
  * {{{language}}} the requested language or if not available, the server's supplied language

or an {{{ERROR}}}

== Relogin ==

When: after establishing a TCP connection.

=== Request ===
{{{
RELOGIN { session="" }
}}}

=== Response ===

{{{
WELCOME_BACK { }
}}}

== Match settings ==

When: after login, before game start

=== Request ===

{{{
GET_MATCH_SETTINGS { }
}}}

=== Response ===

{{{
MATCH_SETTINGS {
  galaxy_template="", 
  races_template="", 
  technology_template="",
  random_surfaces=false,
  tech_level_start=0, 
  tech_level_max=5,
  money=200000, 
  planets=3, 
  population=5000, 
  colony_hub_built=true, 
  colony_ship_available=true, 
  colony_ships=1,
  orbital_factory_available=true, 
  orbital_factories=0,
  conquest_victory=true,
  occupation_victory=true,
  occupation_percent=66,
  occupation_time=30,
  economic_victory=true,
  economic_credits=10000000,
  technology_victory=true,
  social_victory=true,
  social_morale=95,
  social_planets=30,
  races=[ "race1", "race2" ],
  icons=[ "icon_path1" ],
  players=[
    PLAYER {
      id="",
      name="",
      control="AI_EASY|AI_MEDIUM|AI_HARD|TRADERS|PIRATES|USER",
      race="",
      icon="",
      group=1,
      user="",
      traits=["TRAIT1", "TRAIT2"],
      home_planet=""
      may_chose_race=true,
      may_chose_icon=true,
      may_chose_traits=true
      may_chose_home_planet=true,
    }
  ]
}
}}}

Remarks:
  * The {{{PLAYER.name}}} contains the user-editable empire name.
  * {{{PLAYER.user}}} tells who is assigned to the slot, {{{null}}} means the slot may be chosen by the player, if it contains the user name, the roles are preset.

== Choosing player settings ==

When: after match settings, before starting a match.

=== Request ===

{{{
PLAYER_SETTINGS {
  id="",
  name="",
  race="",
  icon="",
  traits=[ "" ],
  home_planet="",
}
}}}

=== Response ===

{{{
PLAYER_SETTINGS_ACCEPTED { }
}}}

or {{{ERROR}}}

== Signal the intent to join the match ==

When: After player settings accepted

=== Request ===

{{{
JOIN { }
}}}

Remark:
  * Clients should wait for the response messages.

=== Response ===

Instructs the clients to start loading assets based on the match settings previously sent/chosen and with the given custom planet configuration,

{{{
LOAD { 
  planet_settings=[
    PLANET {
      id="",
      x=100,
      y=100,
      size=30,
      surface_type="cratered",
      surface_variant=1,
      owned=true
    }
  ],
  fleet_settings=[
    FLEET { ... }
  ]
}
}}}

or

{{{
MATCH_CANCELLED { }
}}}

Remark:
  * Fields {{{x}}}, {{{y}}}, {{{size}}} and {{{owned}}} is optional. The first 3 of them might come in a later version.
  * See the definition of the {{{FLEET}}} object later on.

== Synchronize start of the game ==

When: after client finished the load

=== Request ===

{{{
READY
}}}

=== Response ===

{{{
BEGIN
}}}
